buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

plugins {
    id 'com.palantir.git-version' version '0.7.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply from: 'gradle/propdeps.gradle'
apply plugin: 'docker'

defaultTasks 'bootRun'

sourceCompatibility = 1.8

group 'com.turo'
def baseName = 'cf-example-msvc'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

def apiVersion = "1.0"

if (project.hasProperty("buildNumber") && project.hasProperty("branch") && project.hasProperty("isDefault")) {
    version = apiVersion + "." + buildNumber + (isDefault == "true" ? "" : "-" + branch.replaceAll(/[^\w\d]+/, "_"))
} else {
    version = apiVersion + ".0-dev"
}

println "Version [${version}]"

// Send version to teamcity if requested
task setTeamcityVersionParameter {
    println "##teamcity[setParameter name='" + baseName + "_version' value='" + version + "']"
}

dependencies {
    compile 'com.google.code.findbugs:jsr305:3.0.2' // needed for @javax.annotation.Nullable
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'com.newrelic.agent.java:newrelic-agent:3.+'
    compile 'io.springfox:springfox-swagger2:2.7.0'
    compile 'io.springfox:springfox-swagger-ui:2.7.0'

    compile 'org.apache.commons:commons-lang3:3.5'

    runtime 'net.logstash.logback:logstash-logback-encoder:4.9'
    runtime 'org.springframework.boot:spring-boot-devtools'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.mockito:mockito-core:2.7.16'
    testCompile 'pl.pragmatists:JUnitParams:1.0.6'
}

dependencies {
    optional "org.springframework.boot:spring-boot-configuration-processor"
}

compileJava.dependsOn(processResources)

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.BUILD-SNAPSHOT"
    }
}

springBoot {
    mainClass = 'com.turo.boot.BootApplication'
    executable = true
    buildInfo()
}

bootRun {
    addResources = false
}

jar {
    version = "${version}"
}

task buildDocker(type: Docker) {
    baseImage "turo/java-msvc"
    push = project.hasProperty('push')
    tag = "turo/" + baseName
    addFile {
        from jar
        rename { 'app.jar' }
    }
}

buildDocker.dependsOn(bootRepackage, assemble)
